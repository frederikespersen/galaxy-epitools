<tool id="demultiplex-dorado" name="Demultiplex Dorado FASTQ" version="1.0">

    <description> by assigned barcodes</description>

    <requirements>
        <requirement type="package" version="1.84">biopython</requirement>
    </requirements>

    <command>
        python $__tool_directory__/demultiplex-dorado.py
            --input-fastq $input_fastq
            --output-dir 'demultiplexed'
    </command>

    <inputs>
        <param argument="--input-fastq" type="data" format="fastq,fastq.gz,fastqsanger" label="Input FASTQ file" help="FASTQ file generated by ``dorado basecaller ... --kit-name [barcode-kit-name] ...``."/>
    </inputs>

    <outputs>
        <collection name="output_demultiplexed" type="list" label="${tool.name}: Demultiplexed FASTQs">
            <discover_datasets pattern="__name__" directory="demultiplexed" format="fastq"/>
        </collection>
    </outputs>

    <tests>
        <test>
            <param name="input_fastq" value="single-file/ont_supv5_2024-11-10.fastq"/>
            <output_collection name="output_demultiplexed">
                <element name="SQK-NBD114-24_barcode01.fastq" file="single-file/SQK-NBD114-24_barcode01.fastq" ftype="fastq" />
                <element name="SQK-NBD114-24_barcode02.fastq" file="single-file/SQK-NBD114-24_barcode02.fastq" ftype="fastq" />
                <element name="SQK-NBD114-24_barcode03.fastq" file="single-file/SQK-NBD114-24_barcode03.fastq" ftype="fastq" />
                <element name="unbarcoded.fastq" file="single-file/unbarcoded.fastq" ftype="fastq" />
            </output_collection>
        </test>
    </tests>

    <help><![CDATA[
    
.. class:: infomark.

**What it does**

This tool takes a FASTQ file, generated by ``dorado basecaller`` with the ``--kit-name [barcode-kit-name]`` argument specified, and splits it into separate files by the barcodes assigned to the reads.
        
**How does Dorado assign barcodes?**
Dorado assigns barcodes to Nanopore reads through a process called demultiplexing, which involves identifying and matching barcode sequences within each read. These barcodes are included during library preparation and act as unique identifiers for different samples within a multiplexed run. The software examines the reads to detect the presence of barcode sequences, which are located at the ends of the reads

To assign a barcode, Dorado aligns the detected sequences in the read to a reference set of known barcodes, which may either be provided by the user or included in Dorado's library of standard ONT barcodes. This alignment allows Dorado to determine the similarity of each read to the reference barcodes, scoring potential matches based on their sequence similarity. Only reads that meet a defined quality threshold for alignment accuracy are considered for barcode assignment.

If a read matches a single barcode with sufficient confidence, it is assigned to that barcode. In cases where dual-barcoding is used (i.e., barcodes on both ends of the read), the software ensures consistency by checking that the barcodes match the expected pairing. Reads with ambiguous matches, such as equal similarity to multiple barcodes or insufficient similarity to any barcode, are categorized as "unclassified". This rigorous approach ensures high specificity and minimizes errors in sample assignment during Nanopore sequencing.

    ]]></help>

    <citations>
        <citation type="doi">https://doi.org/10.1093/bioinformatics/btp163</citation>
        <citation type="bibtex">@misc{dorado,
          title = {Dorado: Basecalling for Oxford Nanopore sequencing data},
          author = {{Oxford Nanopore Technologies}},
          howpublished = {\url{https://github.com/nanoporetech/dorado}},
          year = {2024},
          note = {Version 0.8},}
        </citation>
    </citations>

</tool>