<tool id="sequence-liabilities" name="Find Sequence Liabilities" version="1.0">

    <description> using regular expressions</description>

    <requirements>
        <requirement type="package" version="2.2.3">pandas</requirement>
        <requirement type="package" version="1.84">biopython</requirement>
    </requirements>

    <command><![CDATA[
    python $__tool_directory__/sequence-liabilities.py
        #if $input.multiple:
            multiple --input-fasta $input.input_fasta
        #else:
            single --input-sequence $input.input_sequence
        #end if
            --liability-patterns 
                #for $liability in $default_liabilities:
                    $liability
                #end for
                #for $liability in $liabilities:
                    "'$liability.name'=$liability.patterns"
                #end for
            --format $format
            --output-tsv $output_tsv;
    ]]></command>

    <inputs>
        <conditional name="input">
            <param name="multiple" type="boolean" label="Submit multiple sequences" help="Whether to submit more than one sequence for liability detection."/>
            <when value="true">
                <param argument="--input-fasta" type="data" format="fasta" label="Input FASTA" help="FASTA file with sequences to find sequence liabilities in."/>
            </when>
            <when value="false">
                <param argument="--input-sequence" type="text" label="Input Sequence" help="Amino acid sequence to find sequence liabilities in."/>
            </when>
        </conditional>
        <param name="default_liabilities" type="select" multiple="true" label="Default liabilities" help="Select any common liabilities to search for">
            <option value="'Cysteine'=C">Cysteine; C</option>
            <option value="'Oxidation'=M,W">Oxidation; M, W</option>
            <option value="'Glycosylation'=N[^P][ST]">Glycosylation; N[^P][ST]</option>
            <option value="'Asn Deamidation'=N[GNST],GN[FGTY]">Asn Deamidation; N[GNST], GN[FGTY]</option>
            <option value="'Asp Isomerization'=D[DGST]">Asp Isomerization; D[DGST]</option>
            <option value="'Hydrolysis'=DP">Hydrolysis; DP</option>
            <option value="'Polyreactivity'=GGG,RR,V[VG],YY,W[A-Z]?W,VVV">Polyreactivity; GGG, RR, V[VG], YY, W[A-Z]?W, VVV</option>
            <option value="'Aromatic Trimer'=[FWY]{3}">Aromatic Trimer; [FWY]{3}</option>
            <option value="'Viscosity'=HYF,WH">Viscosity; HYF, WH</option>
        </param>
        <param argument="--format" type="select" multiple="false" label="Format" help="What format to return results in">
            <option value="records" selected="true">Each liability as a single row</option>
            <option value="condensed" selected="true">Each sequence as a single row</option>
            <option value="pretty" selected="true">An alignment of each sequence and its liabilities</option>
        </param>
        
        <repeat name="liabilities" title="Liabilities">
            <param name="name" type="text" label="Name" help="Name of liability type, i.e. 'Glycosylation'."/>
            <param name="patterns" type="text" label="Patterns" help="A comma-separated list of regular expressions to search for liabilities with, i.e. 'N[^P]S,N[^P]T'."/>
        </repeat>
    </inputs>

    <outputs>
        <data name="output_tsv" format="tabular" label="${tool.name}: Liabilities"/>
    </outputs>

    <help><![CDATA[
    
.. class:: infomark.

**What it does**

This tool takes one or more amino acid sequences and finds any specified liabilities matching regular expressions.

    ]]></help>

    <citations>
        <citation type="doi">https://doi.org/10.5281/zenodo.3509134</citation>
    </citations>

</tool>